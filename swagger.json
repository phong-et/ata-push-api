{
  "openapi": "3.0.0",
  "info": {
    "title": "ATA Push API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "description": "Development server",
      "url": "http://localhost:8888"
    },
    {
      "description": "Test server",
      "url": "https://ata-push-api.herokuapp.com"
    },
    {
      "description": "Production server",
      "url": "https://ata-push-api.xyz"
    }
  ],
  "paths": {
    "/subscription/create": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Create a subscription",
        "description": "Recevies a push subscription and save it to memory (RAM)",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushSubscription"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushSubscriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscription/notify/{id}": {
      "get": {
        "deprecated": true,
        "tags": [
          "Subscription"
        ],
        "summary": "Notify to a specific subscription",
        "description": "Send a notifiction statement to push api",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "subscription hash id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Notification statement was sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscription/notify-all": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Notify to all subscriptions endpoint",
        "description": "Send a notification statement to push api",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationPopup"
              }
            }
          },
          "required": false,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Notification statement was sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscription/list": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "List all existing subscription ids in memory",
        "responses": {
          "200": {
            "description": "Subscriptions has id list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionHashIds"
                }
              }
            }
          }
        }
      }
    },
    "/subscription/check/{id}": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Check subscription hash id is existed in memory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "subscription hash id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Checking result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notification/service/checkin/start": {
      "post": {
        "tags": [
          "Notification Checkin Server"
        ],
        "description": "Start Notification Checkin service",
        "responses": {
          "201": {
            "description": "Request sent and excuted successfully"
          }
        }
      }
    },
    "/notification/service/checkin/stop": {
      "put": {
        "tags": [
          "Notification Checkin Server"
        ],
        "description": "Stop Notification Checkin service",
        "responses": {
          "201": {
            "description": "Request sent and excuted successfully"
          }
        }
      }
    },
    "/notification/service/checkin/infos": {
      "get": {
        "tags": [
          "Notification Checkin Server"
        ],
        "summary": "Get informations",
        "description": "Get informations of Notification Checkin service",
        "responses": {
          "201": {
            "description": "Infomation of service",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationInfo"
                }
              }
            }
          }
        }
      }
    },
    "/notification/service/checkout/start": {
      "post": {
        "tags": [
          "Notification Checkout Server"
        ],
        "description": "Start Notification Checkout service",
        "responses": {
          "201": {
            "description": "Request sent and excuted successfully"
          }
        }
      }
    },
    "/notification/service/checkout/stop": {
      "put": {
        "tags": [
          "Notification Checkout Server"
        ],
        "description": "Stop Notification Checkout service",
        "responses": {
          "201": {
            "description": "Request sent and excuted successfully"
          }
        }
      }
    },
    "/notification/service/checkout/infos": {
      "get": {
        "tags": [
          "Notification Checkout Server"
        ],
        "summary": "Get informations",
        "description": "Get informations of Notification Checkout service",
        "responses": {
          "201": {
            "description": "Message sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/OfficeSettings": {
      "get": {
        "tags": [
          "Example"
        ],
        "operationId": "OfficeSettings_GetServerDate",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushSubscription"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Example"
        ],
        "operationId": "OfficeSettings_UpdateServerDate",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushSubscription"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushSubscriptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": [
              "Admin"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "PushSubscription": {
        "required": [
          "endpoint"
        ],
        "properties": {
          "endpoint": {
            "type": "string",
            "uniqueItems": true
          },
          "expirationTime": {
            "type": "string",
            "uniqueItems": true
          },
          "keys": {
            "$ref": "#/components/schemas/Keys"
          }
        }
      },
      "Keys": {
        "properties": {
          "p256dh": {
            "type": "string",
            "uniqueItems": true
          },
          "auth": {
            "type": "string",
            "uniqueItems": true
          }
        }
      },
      "PushSubscriptionResponse": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "uniqueItems": true
          }
        }
      },
      "NotificationPopup": {
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the notification that we want to push"
          },
          "text": {
            "type": "string",
            "description": "Content of the notification that we want to push"
          },
          "image": {
            "type": "string",
            "description": "Content of the notification that we want to push"
          },
          "tag": {
            "type": "string",
            "description": "Refer at https://developer.mozilla.org/en-US/docs/Web/API/Notification/tag"
          },
          "url": {
            "type": "string",
            "description": "Click to notificaition popup will open this url"
          }
        }
      },
      "NotificationResponse": {
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "notifiedSubscriptions":{
            "type": "string"
          }
        }
      },
      "SubscriptionHashIds": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "a",
          "b",
          "c"
        ]
      },
      "NotificationInfo": {
        "properties": {
          "serviceStatus": {
            "type": "string",
            "description": "service Status"
          },
          "jobNotifyCheckinCount": {
            "type": "string",
            "description": "jobNotifyCheckinCount"
          },
          "jobNotifyCheckoutCount": {
            "type": "string",
            "description": "jobNotifyCheckoutCount"
          },
          "notifyTime": {
            "type": "string",
            "description": "notifyTime"
          },
          "errorMessage": {
            "type": "string",
            "description": "errorMessage"
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}
